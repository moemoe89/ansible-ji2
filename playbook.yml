---
- hosts: all
  become: yes
  vars:
    USER: momo
    APP_PATH: /home/momo/haproxy
    DOCKER_HAPROXY_IMAGE: haproxy
    DOCKER_APP_IMAGE: momo89/go-hostname
  
  tasks:
    - name: Update apt
      apt: update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools' ]

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt
      apt: update_cache=yes force_apt_get=yes

    - name: Install docker-ce
      apt: name=docker-ce state=latest force_apt_get=yes

    - name: Install Docker
      apt:
        name: "docker-ce"
        state: present
        force_apt_get: "yes"

    - name: Test Docker with hello world example
      shell: "docker run hello-world"
      register: hello_world_output

    - name: Show output of hello word example
      debug:
        msg: "Container Output: {{hello_world_output.stdout}}"

    - name: Create docker group
      group:
        name: "docker"
        state: present

    - name: Adding user {{ USER }} to docker group  
      user:
        name: "{{ USER }}"
        groups: "docker"
        append: "yes"

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Pull HAProxy Docker image
      docker_image:
        name: "{{ DOCKER_HAPROXY_IMAGE }}"
        source: pull

    - name: Pull app Docker image
      docker_image:
        name: "{{ DOCKER_APP_IMAGE }}"
        source: pull

    - name: Creates directory
      file:
        path: "{{ APP_PATH }}"
        state: directory

    - name: Transfer Dockerfile
      copy: src=Dockerfile dest={{ APP_PATH }} mode=0644

    - name: Transfer haproxy config
      copy: src=haproxy.cfg dest={{ APP_PATH }} mode=0644

    - name: Transfer the script
      copy: src=setup.sh dest={{ APP_PATH }} mode=0755

    - name: Execute the script
      args:
        chdir: "{{ APP_PATH }}"
      shell: "{{ APP_PATH }}/setup.sh"